//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace TestAngularJS1.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EyePrescriptionEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EyePrescriptionEntities object using the connection string found in the 'EyePrescriptionEntities' section of the application configuration file.
        /// </summary>
        public EyePrescriptionEntities() : base("name=EyePrescriptionEntities", "EyePrescriptionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EyePrescriptionEntities object.
        /// </summary>
        public EyePrescriptionEntities(string connectionString) : base(connectionString, "EyePrescriptionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EyePrescriptionEntities object.
        /// </summary>
        public EyePrescriptionEntities(EntityConnection connection) : base(connection, "EyePrescriptionEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeftEyeAdd> LeftEyeAdds
        {
            get
            {
                if ((_LeftEyeAdds == null))
                {
                    _LeftEyeAdds = base.CreateObjectSet<LeftEyeAdd>("LeftEyeAdds");
                }
                return _LeftEyeAdds;
            }
        }
        private ObjectSet<LeftEyeAdd> _LeftEyeAdds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeftEyeAxi> LeftEyeAxis
        {
            get
            {
                if ((_LeftEyeAxis == null))
                {
                    _LeftEyeAxis = base.CreateObjectSet<LeftEyeAxi>("LeftEyeAxis");
                }
                return _LeftEyeAxis;
            }
        }
        private ObjectSet<LeftEyeAxi> _LeftEyeAxis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeftEyeCylinder> LeftEyeCylinders
        {
            get
            {
                if ((_LeftEyeCylinders == null))
                {
                    _LeftEyeCylinders = base.CreateObjectSet<LeftEyeCylinder>("LeftEyeCylinders");
                }
                return _LeftEyeCylinders;
            }
        }
        private ObjectSet<LeftEyeCylinder> _LeftEyeCylinders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeftEyeSphere> LeftEyeSpheres
        {
            get
            {
                if ((_LeftEyeSpheres == null))
                {
                    _LeftEyeSpheres = base.CreateObjectSet<LeftEyeSphere>("LeftEyeSpheres");
                }
                return _LeftEyeSpheres;
            }
        }
        private ObjectSet<LeftEyeSphere> _LeftEyeSpheres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RightEyeAdd> RightEyeAdds
        {
            get
            {
                if ((_RightEyeAdds == null))
                {
                    _RightEyeAdds = base.CreateObjectSet<RightEyeAdd>("RightEyeAdds");
                }
                return _RightEyeAdds;
            }
        }
        private ObjectSet<RightEyeAdd> _RightEyeAdds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RightEyeAxi> RightEyeAxis
        {
            get
            {
                if ((_RightEyeAxis == null))
                {
                    _RightEyeAxis = base.CreateObjectSet<RightEyeAxi>("RightEyeAxis");
                }
                return _RightEyeAxis;
            }
        }
        private ObjectSet<RightEyeAxi> _RightEyeAxis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RightEyeCylinder> RightEyeCylinders
        {
            get
            {
                if ((_RightEyeCylinders == null))
                {
                    _RightEyeCylinders = base.CreateObjectSet<RightEyeCylinder>("RightEyeCylinders");
                }
                return _RightEyeCylinders;
            }
        }
        private ObjectSet<RightEyeCylinder> _RightEyeCylinders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RightEyeSphere> RightEyeSpheres
        {
            get
            {
                if ((_RightEyeSpheres == null))
                {
                    _RightEyeSpheres = base.CreateObjectSet<RightEyeSphere>("RightEyeSpheres");
                }
                return _RightEyeSpheres;
            }
        }
        private ObjectSet<RightEyeSphere> _RightEyeSpheres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vwUserProfile> vwUserProfiles
        {
            get
            {
                if ((_vwUserProfiles == null))
                {
                    _vwUserProfiles = base.CreateObjectSet<vwUserProfile>("vwUserProfiles");
                }
                return _vwUserProfiles;
            }
        }
        private ObjectSet<vwUserProfile> _vwUserProfiles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeftEyeAdds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeftEyeAdds(LeftEyeAdd leftEyeAdd)
        {
            base.AddObject("LeftEyeAdds", leftEyeAdd);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeftEyeAxis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeftEyeAxis(LeftEyeAxi leftEyeAxi)
        {
            base.AddObject("LeftEyeAxis", leftEyeAxi);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeftEyeCylinders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeftEyeCylinders(LeftEyeCylinder leftEyeCylinder)
        {
            base.AddObject("LeftEyeCylinders", leftEyeCylinder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeftEyeSpheres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeftEyeSpheres(LeftEyeSphere leftEyeSphere)
        {
            base.AddObject("LeftEyeSpheres", leftEyeSphere);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RightEyeAdds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRightEyeAdds(RightEyeAdd rightEyeAdd)
        {
            base.AddObject("RightEyeAdds", rightEyeAdd);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RightEyeAxis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRightEyeAxis(RightEyeAxi rightEyeAxi)
        {
            base.AddObject("RightEyeAxis", rightEyeAxi);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RightEyeCylinders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRightEyeCylinders(RightEyeCylinder rightEyeCylinder)
        {
            base.AddObject("RightEyeCylinders", rightEyeCylinder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RightEyeSpheres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRightEyeSpheres(RightEyeSphere rightEyeSphere)
        {
            base.AddObject("RightEyeSpheres", rightEyeSphere);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vwUserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovwUserProfiles(vwUserProfile vwUserProfile)
        {
            base.AddObject("vwUserProfiles", vwUserProfile);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="LeftEyeAdd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeftEyeAdd : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeftEyeAdd object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static LeftEyeAdd CreateLeftEyeAdd(global::System.Int32 id, global::System.String description)
        {
            LeftEyeAdd leftEyeAdd = new LeftEyeAdd();
            leftEyeAdd.ID = id;
            leftEyeAdd.Description = description;
            return leftEyeAdd;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="LeftEyeAxi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeftEyeAxi : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeftEyeAxi object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static LeftEyeAxi CreateLeftEyeAxi(global::System.Int32 id, global::System.String description)
        {
            LeftEyeAxi leftEyeAxi = new LeftEyeAxi();
            leftEyeAxi.ID = id;
            leftEyeAxi.Description = description;
            return leftEyeAxi;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="LeftEyeCylinder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeftEyeCylinder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeftEyeCylinder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static LeftEyeCylinder CreateLeftEyeCylinder(global::System.Int32 id, global::System.String description)
        {
            LeftEyeCylinder leftEyeCylinder = new LeftEyeCylinder();
            leftEyeCylinder.ID = id;
            leftEyeCylinder.Description = description;
            return leftEyeCylinder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="LeftEyeSphere")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeftEyeSphere : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeftEyeSphere object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static LeftEyeSphere CreateLeftEyeSphere(global::System.Int32 id, global::System.String description)
        {
            LeftEyeSphere leftEyeSphere = new LeftEyeSphere();
            leftEyeSphere.ID = id;
            leftEyeSphere.Description = description;
            return leftEyeSphere;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="RightEyeAdd")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RightEyeAdd : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RightEyeAdd object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RightEyeAdd CreateRightEyeAdd(global::System.Int32 id, global::System.String description)
        {
            RightEyeAdd rightEyeAdd = new RightEyeAdd();
            rightEyeAdd.ID = id;
            rightEyeAdd.Description = description;
            return rightEyeAdd;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="RightEyeAxi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RightEyeAxi : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RightEyeAxi object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RightEyeAxi CreateRightEyeAxi(global::System.Int32 id, global::System.String description)
        {
            RightEyeAxi rightEyeAxi = new RightEyeAxi();
            rightEyeAxi.ID = id;
            rightEyeAxi.Description = description;
            return rightEyeAxi;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="RightEyeCylinder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RightEyeCylinder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RightEyeCylinder object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RightEyeCylinder CreateRightEyeCylinder(global::System.Int32 id, global::System.String description)
        {
            RightEyeCylinder rightEyeCylinder = new RightEyeCylinder();
            rightEyeCylinder.ID = id;
            rightEyeCylinder.Description = description;
            return rightEyeCylinder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="RightEyeSphere")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RightEyeSphere : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RightEyeSphere object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RightEyeSphere CreateRightEyeSphere(global::System.Int32 id, global::System.String description)
        {
            RightEyeSphere rightEyeSphere = new RightEyeSphere();
            rightEyeSphere.ID = id;
            rightEyeSphere.Description = description;
            return rightEyeSphere;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 id)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.ID = id;
            return userProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsValidated
        {
            get
            {
                return _IsValidated;
            }
            set
            {
                OnIsValidatedChanging(value);
                ReportPropertyChanging("IsValidated");
                _IsValidated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValidated");
                OnIsValidatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsValidated;
        partial void OnIsValidatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsValidatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswardSent
        {
            get
            {
                return _PasswardSent;
            }
            set
            {
                OnPasswardSentChanging(value);
                ReportPropertyChanging("PasswardSent");
                _PasswardSent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswardSent");
                OnPasswardSentChanged();
            }
        }
        private global::System.String _PasswardSent;
        partial void OnPasswardSentChanging(global::System.String value);
        partial void OnPasswardSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EyePrescriptionModel", Name="vwUserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vwUserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vwUserProfile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static vwUserProfile CreatevwUserProfile(global::System.Int32 id)
        {
            vwUserProfile vwUserProfile = new vwUserProfile();
            vwUserProfile.ID = id;
            return vwUserProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsValidated
        {
            get
            {
                return _IsValidated;
            }
            set
            {
                OnIsValidatedChanging(value);
                ReportPropertyChanging("IsValidated");
                _IsValidated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsValidated");
                OnIsValidatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsValidated;
        partial void OnIsValidatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsValidatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswardSent
        {
            get
            {
                return _PasswardSent;
            }
            set
            {
                OnPasswardSentChanging(value);
                ReportPropertyChanging("PasswardSent");
                _PasswardSent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswardSent");
                OnPasswardSentChanged();
            }
        }
        private global::System.String _PasswardSent;
        partial void OnPasswardSentChanging(global::System.String value);
        partial void OnPasswardSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddedDate
        {
            get
            {
                return _AddedDate;
            }
            set
            {
                OnAddedDateChanging(value);
                ReportPropertyChanging("AddedDate");
                _AddedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddedDate");
                OnAddedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddedDate;
        partial void OnAddedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAddedDateChanged();

        #endregion

    
    }

    #endregion

    
}
